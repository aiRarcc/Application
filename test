import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Temp & Humidity App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const TempHumidityPage(),
    );
  }
}

class TempHumidityPage extends StatefulWidget {
  const TempHumidityPage({Key? key}) : super(key: key);

  @override
  _TempHumidityPageState createState() => _TempHumidityPageState();
}

class _TempHumidityPageState extends State<TempHumidityPage> {
  Stream<Map<String, dynamic>>? dhtDataStream;

  @override
  void initState() {
    super.initState();
    dhtDataStream = _getDHTDataStream();
  }

  Stream<Map<String, dynamic>> _getDHTDataStream() async* {
    final url = Uri.https(
      'verminn-dde78-default-rtdb.firebaseio.com',
      'AppUsers.json',
    );
    while (true) {
      try {
        final response = await http.get(url);
        if (response.statusCode == 200) {
          final Map<String, dynamic> jsonData = json.decode(response.body);
          yield jsonData;
        } else {
          print(
              'Failed to load DHT data: ${response.statusCode} - ${response.reasonPhrase}');
        }
      } catch (error) {
        print('Error loading DHT data: $error');
      }
      await Future.delayed(const Duration(seconds: 1));   
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Temperature & Humidity'),
      ),
      body: Center(
        child: StreamBuilder<Map<String, dynamic>>(
          stream: dhtDataStream,
          builder: (context, snapshot) {
            if (snapshot.hasData) {
              final jsonData = snapshot.data!;
              return Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'Temperature: ${jsonData['Temperature'].toString()}Â°C',
                    style: const TextStyle(fontSize: 24),
                  ),
                  const SizedBox(height: 20),
                  Text(
                    'Humidity: ${jsonData['Humidity'].toString()}%',
                    style: const TextStyle(fontSize: 24),
                  ),
                ],
              );
            } else if (snapshot.hasError) {
              return Text('Error: ${snapshot.error}');
            } else {
              return const CircularProgressIndicator();
            }
          },
        ),
      ),
    );
  }
}
